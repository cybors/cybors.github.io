<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>诸神之黄昏</title>
  <subtitle>简单简约 专注有意义的事</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cybors.github.io/"/>
  <updated>2016-09-27T01:38:34.000Z</updated>
  <id>http://cybors.github.io/</id>
  
  <author>
    <name>Royalive</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>map_reduce</title>
    <link href="http://cybors.github.io/2016/09/26/map-reduce/"/>
    <id>http://cybors.github.io/2016/09/26/map-reduce/</id>
    <published>2016-09-25T18:37:15.000Z</published>
    <updated>2016-09-27T01:38:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>MapReduce<br>在Python里内建了Map和Reduce 函数，一开始怎么也看不明白，看图识也不明白。<br>直到看了”MapReduce:Simplified Data Processing on Large Clusters” <a href="https://www.cs.utexas.edu/~pingali/CS395T/2012sp/lectures/MR-nikhil-panpalia.pdf" target="_blank" rel="external">link</a>（面向大型集群的简化数据处理）这个论文来自GOOGLE.&lt;–more–&gt;<br><img src="http://www.liaoxuefeng.com/files/attachments/0013879622109990efbf9d781704b02994ba96765595f56000/0" alt="MAP"><br>Map(映射)Reduce(化简)<br>MapRedce 既是一种编程模型，也是一种与之关联的、用于处理和产生大数据集的实现。用户要特化一个map程序去处理key/value对，并产生中间key/value对的集合，以及一个Reduce程序去合并有着相同key的所有中间key/value对。</p>
<p>用这种函数风格写出的程序自动就拥有了在一个大的PC机集群上并执行的能力。运行时系统会负责细节：切分输入数据，在一组机器上调度执行程序，处理机器错误，以及管理所需的机器间通信。这允许不具备任何并行和分布式系统经验的程序员也能轻松地利用一个大型分布式系统的资源。<br>我们的MapReduce实现运行在一个大型PC机集群上，且具有很好的扩展性：一个典型的MapReduce作业运行在Google的集群上。<br><strong>编程模型</strong><br>计算过程就是输入一组key/value对，再生成一组key/value对。MapReduce库的使用者用两个函数来表示这个过程：map和reduce。</p>
<p>map由使用者编写,使用一个输入key/value对，生成一组中间key/value对。MapReduce库将有着相同中间Key I中间的value都组合在一起，再传给reduce函数。<br>reduce也由使用者编写，它接受一个中间Key I 和一组与I对应的value.他将这些value合并为一个可能更小的value集合。通常每个reduce调用只产生0或1输出value.中间value是通过一个迭代器提供给reduce函数的。这允许我们操作那些因为大到找不到连续存放的内存而使用链表的value集合。</p>
<p>Example:</p>
<figure class="highlight plain"><figcaption><span>key,String value):</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">       //key:文档名</div><div class="line">       //value：文档内容</div><div class="line">       for each word w in value:</div><div class="line">           EmitIntermediate(w,&quot;1&quot;);</div><div class="line">reduce(Stringkey,Iterator values):</div><div class="line">    //key:一个单词</div><div class="line">    //value:计数值列表</div><div class="line">    int result = 0;</div><div class="line">    for each v in values:</div><div class="line">        result += ParseInt(v);</div><div class="line">    Emit(AsString(result));</div></pre></td></tr></table></figure>
<p>map函数将每个单词与出现次数一同输出（↑例子中鸡蛋的那输出“1”）reduce函数将针对某个特定词输出的次数都合并相加。</p>
<p>另外，使用者要写代码填充一个符合MapReduce规格的对象，内容包括输入和输出文件的名字，以及可选的调节参数。之后使用者调用MapReduce函数，将指定到对象传进去。用户代码会与MapReduce库链接到一起。</p>
<p><strong>实现</strong><br>许多不同的MapReduce的实现都是可行的。选择哪一个要取决于环境。例如，一种实现可能适合于小型的共享内存机器，一种实现可能适合于大型的NUMA多处理器机器，而另一种则适合于更大型的联网机器集。</p>
<p>本部分描述的实现主要面向Google内部广泛使用的计算环境：大型的商用PC机集群，互相之间用交换式以太网连接。我们的环境是：</p>
<p>主要使用的机器为双核X86处理器，运行Linux系统，每台机器的内存从2GB到4GB不等。</p>
<p>使用的都是商用网络硬件设备——在机器层面上通常从100Mbps到1Gbps不等，但平均起来要比总带宽的一半少很多。</p>
<p>集群中拥有数百或数千台机器，因此机器错误经常出现。</p>
<p>每台机器都使用廉价的IDE硬盘来提供存储功能。我们使用一种内部开发的分布式文件系统来管理这些磁盘上的数据。这个文件系统通过复制的方法在不可靠的硬件之上提供了实用性与可靠性。</p>
<p>用户向一个调度系统提交作业。每个作业包括了一个任务集，会由调度器调度到集群内可用的一组机器上。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MapReduce&lt;br&gt;在Python里内建了Map和Reduce 函数，一开始怎么也看不明白，看图识也不明白。&lt;br&gt;直到看了”MapReduce:Simplified Data Processing on Large Clusters” &lt;a href=&quot;https:
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="python" scheme="http://cybors.github.io/tags/python/"/>
    
      <category term="technology" scheme="http://cybors.github.io/tags/technology/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu_download</title>
    <link href="http://cybors.github.io/2016/09/25/Ubuntu-download/"/>
    <id>http://cybors.github.io/2016/09/25/Ubuntu-download/</id>
    <published>2016-09-24T17:52:31.000Z</published>
    <updated>2016-09-27T01:34:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu下的多线程下载工具<br>Uget和aria2下载神器，类似win下的迅雷 旋风等工具<br><a id="more"></a><br><strong>Install</strong><br>1.添加依赖<br><code>sudo add-apt-repository ppa:plushuang-tw/uget-stable</code><br><code>sudo add-apt-repository ppa:t-tujikawa/ppa</code><br>2.更新依赖<br><code>sudo apt-get update</code><br>3.安装uget 、aria2<br><code>sudo apt-get install uget aria2</code><br>4.配置<br>将最大连接数设置为16<br>uget—All Category—右键—Properties—Default for new download1—Max Connections—16<br>开启aria插件<br>uget—右键—settings—Plug-in—Plug-in matching order—aria2<br>同时，下方的arguments: –enable-rpc=true</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu下的多线程下载工具&lt;br&gt;Uget和aria2下载神器，类似win下的迅雷 旋风等工具&lt;br&gt;
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="linux" scheme="http://cybors.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu</title>
    <link href="http://cybors.github.io/2016/09/25/Ubuntu/"/>
    <id>http://cybors.github.io/2016/09/25/Ubuntu/</id>
    <published>2016-09-24T16:07:08.000Z</published>
    <updated>2016-09-24T16:21:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu-16-04-LTS"><a href="#Ubuntu-16-04-LTS" class="headerlink" title="Ubuntu 16.04 LTS"></a>Ubuntu 16.04 LTS</h2><p>前几天心血来潮看到都在说 Elementary 这个Ubuntu的分支是最美的。于是趁着有点闲空，就做了个启动盘，Elementary可以正确识别之前安装的Ubuntu，然后就执行了覆盖安装。<a id="more"></a><br>   Elementary确实有着独到的美感，有点像MAC的感觉，但是很多的软件都是非常的不常见，有点差异化发展的意思。<br>   但是并没有Ubuntu好用，遂决定再回到Ubuntu的环境。</p>
<p>   说起Ubuntu，这要追溯到2008年，当时Ubuntu为了推广，在网上发布了免费申请Ubuntu的安装光盘的活动，立马就申请了（32bit和64bit各一份），暑假之前申请，历经2个多月的大学暑假，大概是开学一个多月后，收到学校邮局的通知，当时因为地址填写的是英文，据邮局的工作人员说有三四个老师轮番翻译了一边才正确投递。</p>
<p>   拿到手的第一时间就感觉好兴奋，当时就被Ubuntu的人文情感所迷倒，人生的第一份来自地球另一端的快件。还附赠了logo贴纸，至今我都留着没舍得乱贴。封面设计非常简单，四个来自不同国家的年轻人躺在草地上，就这样的简单意境，对我对IT的认知产生了新的影响。</p>
<p>   Canonical 在今年的4月发布了16.04 LTS（Xenial Xerus）发布说这是一个长期支持版本，官方会提供长达5年的Techinical Support，也就是大概可以支持到2021年4月左右，这也是决定要重新安装回到Ubuntu的一个原因。</p>
<p>   附上下载地址：<br>   Ubuntu 16.04 LTS官方镜像下载：</p>
<p>32位：<a href="http://releases.ubuntu.com/16.04/ubuntu-16.04-desktop-i386.iso" target="_blank" rel="external">http://releases.ubuntu.com/16.04/ubuntu-16.04-desktop-i386.iso</a></p>
<p>64位：<a href="http://releases.ubuntu.com/16.04/ubuntu-16.04-desktop-amd64.iso" target="_blank" rel="external">http://releases.ubuntu.com/16.04/ubuntu-16.04-desktop-amd64.iso</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">关于如何安装就不在这里赘述了，网上可以GG到一大片，恩想要GG的可以看Google Mirror这篇文章。</div></pre></td></tr></table></figure>
<p>关于SUBLIME TEXT3的中文输入问题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">因为安装这个Linux主要是为了Python的开发环境，所以围绕着Python做了环境部署。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">编辑及IDE环境使用 Pycharm VIM Gedit atom Sublime Text3</div><div class="line">其中，在SublimeText3 解决无法使用中文的问题，网上的答案几乎出自同一个人，但是并不好用，需要生成共用的配置文件等。其实在github上有个更为简单的解决方法。</div></pre></td></tr></table></figure>
<p><a href="https://github.com/lyfeyaj/sublime-text-imfix" target="_blank" rel="external">github/lyfeyaj</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Step to use this repo</div><div class="line">1.Update and then upgrade your system to the newest</div><div class="line">`sudo apt-get updat &amp;&amp; sudo apt-get updrade`</div><div class="line">2.Clone this repo in your local directory:</div><div class="line">`git clone https://github.com/lyfeyaj/sublime-text-imfix.git`</div><div class="line">3.Change your current directory to sublime-text-imfix:</div><div class="line">`cd sublime-text-imfix`</div><div class="line">4.Run the below script:</div><div class="line">`./sublim-imfix`</div><div class="line">5.Done! Re-login Ubuntu.And then you gan enjoy using Sublime Text3!</div></pre></td></tr></table></figure>
<p> 关于有道词典的安装.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">有道词典提供Linux的deb安装包，但是下载了Ubuntu 64bit的安装包无法正常安装，使用install -f解决依赖包的问题也无法正常解决，看到页面置顶的是Deepin的deb包尝试了一下 下载后直接一步安装成功～</div></pre></td></tr></table></figure>
<p> 关于Pycharm</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">现在来看使用Pycharm的人越来越多，而且Pycharm也相对智能人性一些，在创建Project的时候提供选择语言环境，是Python2还是Python3，有点类似使用Python自己的虚拟环境的感觉。</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">注意 2016版本使用网上的 Lisence server已经失效，不过还是侥幸找到一枚可用的激活码。</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ubuntu-16-04-LTS&quot;&gt;&lt;a href=&quot;#Ubuntu-16-04-LTS&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 16.04 LTS&quot;&gt;&lt;/a&gt;Ubuntu 16.04 LTS&lt;/h2&gt;&lt;p&gt;前几天心血来潮看到都在说 Elementary 这个Ubuntu的分支是最美的。于是趁着有点闲空，就做了个启动盘，Elementary可以正确识别之前安装的Ubuntu，然后就执行了覆盖安装。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="linux" scheme="http://cybors.github.io/tags/linux/"/>
    
      <category term="Python" scheme="http://cybors.github.io/tags/Python/"/>
    
      <category term="ubuntu" scheme="http://cybors.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>netease_musicbox</title>
    <link href="http://cybors.github.io/2016/09/24/netease-musicbox/"/>
    <id>http://cybors.github.io/2016/09/24/netease-musicbox/</id>
    <published>2016-09-23T18:35:30.000Z</published>
    <updated>2016-09-27T01:36:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>网易云音乐</p>
<p>在Ubuntu下如何听高品质的音乐，虾米还是网易云，无意间看到了<a href="https://github.com/kigawas/musicbox" target="_blank" rel="external">kigawas</a> 在安装过程中遇到很多问题，并不在作者的FAQ里面<br>遇到的报错，我的Py环境py2和py3里面都没有安装future Module，在pip install future 的环节中反复报错有好多的依赖包没有安装，依次安装后成功安装。</p>
<p>键盘快捷键</p>
<p>J    Down    下移<br>K    Up    上移<br>H    Back    后退<br>L    Forword    前进<br>U    Prev page    上一页<br>D    Next page    下一页<br>F    Search    快速搜索<br>[    Prev song    上一曲<br>]    Next song    下一曲<br>=    Volume +    音量增加</p>
<ul>
<li>Volume -    音量减少<br>SpacePlay/Pause    播放/暂停<br>?Shuffle    手气不错<br>MMenu    主菜单<br>PPresent/History    当前/历史播放列表<br>IMusic Info    当前音乐信息<br>⇧+PPlaying Mode    播放模式切换<br>AAdd    添加曲目到打碟<br>ZDJ list    打碟列表<br>SStar    添加到收藏<br>CCollection    收藏列表<br>RRemove    删除当前条目<br>⇧+JMove Down    向下移动当前项目<br>⇧+KMove Up    向上移动当前项目<br>⇧+CCache    缓存歌曲到本地<br>,Like    喜爱<br>.Trash FM    删除 FM<br>/Next FM    下一FM<br>QQuit    退出<br>WQuit&amp;Clear    退出并清除用户信息</li>
</ul>
<p>Ubuntu安装方法<br><code>sudo pip install NetEase-MusicBox</code><br><code>sudo apt-get install mpg123</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网易云音乐&lt;/p&gt;
&lt;p&gt;在Ubuntu下如何听高品质的音乐，虾米还是网易云，无意间看到了&lt;a href=&quot;https://github.com/kigawas/musicbox&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kigawas&lt;/a&gt; 在安装
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="linux" scheme="http://cybors.github.io/tags/linux/"/>
    
      <category term="tool" scheme="http://cybors.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>old-string-formatting</title>
    <link href="http://cybors.github.io/2016/09/22/old-string-formatting/"/>
    <id>http://cybors.github.io/2016/09/22/old-string-formatting/</id>
    <published>2016-09-22T03:59:18.000Z</published>
    <updated>2016-09-22T05:44:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="旧式字符串格式化"><a href="#旧式字符串格式化" class="headerlink" title="旧式字符串格式化"></a>旧式字符串格式化</h2><p>%操作符可以实现字符串格式化。它将左侧的参数作为类似sprintf()式的格式化字符串，而将右侧的代入，然后返回格式化后的字符串。<a id="more"></a></p>
<p>for example:</p>
<figure class="highlight plain"><figcaption><span>math</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;print(&apos;The value of PI is approximately %5.3f.&apos; %math.pi)</div><div class="line">The value of PI is approximately 3.142</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">因为目前的趋势很多人开始学习Python的人都是学Python3.5 ，但仍有大量企业使用Python2.7，很多的第三方库对version3的版本没有支持。</div><div class="line"></div><div class="line">新的字符串格式化 str.format(),将会替代旧式的%</div><div class="line"></div><div class="line">For example.</div><div class="line"></div><div class="line">```python</div><div class="line">&apos;The sum of 1 + 2 is 3&apos;</div></pre></td></tr></table></figure>
<p>str.format_map(mapping)</p>
<figure class="highlight plain"><figcaption><span>default(dict):</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">      def __missing__(self,key):</div><div class="line">          return key</div><div class="line">          </div><div class="line">  &apos;&#123;name&#125; was born in &#123;country&#125;&apos;.format_map(default(name=&apos;Guido&apos;))</div><div class="line">&apos;Guido war borin in country&apos;</div></pre></td></tr></table></figure>
<p>str.index(sub[,start[,end]]) </p>
<p>Like find(),but raise ValueError when the substring is not found.</p>
<p>区别与find(),find的结果为False时返回-1，index()的查询值如果不在str中，则会报错。</p>
<p><code>changxufeng.find(&#39;y&#39;)//return -1</code></p>
<p><code>changxufeng.index(&#39;y&#39;)// ValueError:substring not found</code></p>
<p>str.isalnum()</p>
<p>​    Return true if all characters in the string are alphanumeric and there is at least one character,false otherwise. A character c is alphanumeric if one of the following returns True: c.isalpha(), c.isdecimal(),  c.isdigit(), or c.isnumeric().</p>
<p>如果都是字母和数字时候，return True, else return False.</p>
<p>str.isalpha()</p>
<p>​    Return true if all characters in the string are alphabetic and there is at least one character, false otherwise.Alphabetic characters are those characters defined in the Unicode character database as “Letter”,ie.e., those with general category property being one of “Lm”,”Lt”, “Lu”,”Ll” or “Lo” .Note that this is different from the “Alphabetic” propertty defined in the Unicode Standard.</p>
<p>判断str是否都是数字</p>
<p>str.isdecimal()</p>
<p>​    Return true if all characters in the string are <strong>decimal</strong> characters and there is at least one character,false otherwise.Decimal characters are those from general catefory “Nd”. This category includes digit characters,and all characters that that can be used to form decimal-radix numbers,e.g. U+0660,ARABIC-INDIC DIGIT ZERO.</p>
<p>判断str是否是十进制数。</p>
<p>str.lstrip([<em>chars</em>])</p>
<p>Return a copy of the string with leading characters removed. The <em>chars</em> argument is a string specifying the set of characters to be removed. If omitted or<code>None</code>, the <em>chars</em> argument defaults to removing whitespace. The <em>chars</em> argument is not a prefix; rather, all combinations of its values are stripped:</p>
<p><code>&#39;  changxufeng&#39;.lstrip()</code>\当argu为空是，返回结果为去掉str前面的空格。不影响原来str的值，只是一份copy</p>
<p><code>&#39;changxufeng&#39;.lstrip(chang)</code>\return ‘xufeng’</p>
<p>如果去掉首位的空格可以使用str.strip()</p>
<p><code>&#39;changxufeng&#39;.rstrip(&#39;xufeng&#39;)</code>\return ‘cha’</p>
<p>str.title()</p>
<p>​    Return a titlecased version of the string where words start with an uppercase character and the remaining characters are lowercase.</p>
<p>​    The algorithm uses a simple language-independent definition of a word as groups of consecutive letters. The definition works in many contexts but it means that apostrophes in contractions and possessives form word boundaries, which may not be the desired result:</p>
<p>string中首字母大写。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;旧式字符串格式化&quot;&gt;&lt;a href=&quot;#旧式字符串格式化&quot; class=&quot;headerlink&quot; title=&quot;旧式字符串格式化&quot;&gt;&lt;/a&gt;旧式字符串格式化&lt;/h2&gt;&lt;p&gt;%操作符可以实现字符串格式化。它将左侧的参数作为类似sprintf()式的格式化字符串，而将右侧的代入，然后返回格式化后的字符串。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="Python" scheme="http://cybors.github.io/tags/Python/"/>
    
      <category term="Technology" scheme="http://cybors.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>外链图床的更换</title>
    <link href="http://cybors.github.io/2016/09/22/exp-link/"/>
    <id>http://cybors.github.io/2016/09/22/exp-link/</id>
    <published>2016-09-21T17:52:31.000Z</published>
    <updated>2016-09-22T05:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>##外链图床的更换<br>考虑到要坚持长期写作记录的目标，在日志中需要po一些图出来，而github只有300Mb的空间，注册了<a href="https://portal.qiniu.com/signin" target="_blank" rel="external">七牛云</a>的云服务并进行了验证，考虑到只有一年的免费使用时间，而自己制定的目标要比这遥远，为了计划不被外力夭折。<br>GG了稳定的图床，发现质量好速度快的图床几户都被滥用而和谐，发现了<a href="http://www.huangguofeng.com" target="_blank" rel="external">黄国锋</a>开发的百度直连系统。<br>将图片放到百度云盘应该是个不错的选择，一来速度和cdn都是免费的，二如果如果真的那天不开放了，图片的路径仍然可以保存。可以直接一次全部替换路径实现修复。</p>
<p>link：<a href="http://bdbea3.duapp.com/baidu_pcs/file_manage.php" target="_blank" rel="external">http://bdbea3.duapp.com/baidu_pcs/file_manage.php</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##外链图床的更换&lt;br&gt;考虑到要坚持长期写作记录的目标，在日志中需要po一些图出来，而github只有300Mb的空间，注册了&lt;a href=&quot;https://portal.qiniu.com/signin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="blog" scheme="http://cybors.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>最好的语言</title>
    <link href="http://cybors.github.io/2016/09/21/ruby-best/"/>
    <id>http://cybors.github.io/2016/09/21/ruby-best/</id>
    <published>2016-09-21T14:52:31.000Z</published>
    <updated>2016-09-21T14:51:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？"><a href="#在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？" class="headerlink" title="在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？"></a>在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？</h2><p>我们来让智能的Python来告诉我们一下<a id="more"></a></p>
<p><code>&#39;Ruby&#39; &gt; &#39;Python&#39;</code></p>
<p><code>&#39;Ruby&#39; &gt; &#39;.NET&#39;</code></p>
<p><code>&#39;Ruby&#39; &gt; &#39;Objective-C&#39;</code></p>
<p><code>&#39;Ruby&#39; &gt; &#39;PHP&#39;</code></p>
<p><code>&#39;Ruby&#39; &gt; &#39;Java&#39;</code></p>
<p><code>&#39;Ruby&#39; &gt; &#39;C&#39;</code></p>
<p>大家可以清晰的看到到底谁是最好的语言了，连Python的IELD环境下都自己说自己不如’Ruby’<img src="http://ww1.sinaimg.cn/large/0060lm7Tgw1f81lc9r1hij300x00u3y9.jpg" alt="汗"></p>
<p><img src="http://ww2.sinaimg.cn/large/0060lm7Tgw1f81kg61muzj30gt0gs0us.jpg" alt="ruby"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？&quot;&gt;&lt;a href=&quot;#在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？&quot; class=&quot;headerlink&quot; title=&quot;在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？&quot;&gt;&lt;/a&gt;在选择一门编程语言前，总会有各种的选择是选C还是选Java还是其他的？&lt;/h2&gt;&lt;p&gt;我们来让智能的Python来告诉我们一下
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="Python" scheme="http://cybors.github.io/tags/Python/"/>
    
      <category term="Technology" scheme="http://cybors.github.io/tags/Technology/"/>
    
      <category term="joke" scheme="http://cybors.github.io/tags/joke/"/>
    
  </entry>
  
  <entry>
    <title>Googlemirror</title>
    <link href="http://cybors.github.io/2016/09/14/Googlemirror/"/>
    <id>http://cybors.github.io/2016/09/14/Googlemirror/</id>
    <published>2016-09-14T04:04:42.000Z</published>
    <updated>2016-09-25T06:44:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google-Mirror"><a href="#Google-Mirror" class="headerlink" title="Google Mirror"></a>Google Mirror</h1><p>实在是不喜欢百度&amp;百不到正确的答案，以下是搜集的谷歌镜像网址。<a id="more"></a><br><img src="http://google.adwiki.cn/logo2.jpg" alt="Google-Mirror"><br>9月23日更新<br>原版镜像：</p>
<p><a href="http://so.biochen.com/" target="_blank" rel="external">http://so.biochen.com/</a><br><a href="http://baidusb.tk/" target="_blank" rel="external">http://baidusb.tk/</a><br><a href="https://g.inspire-energy.com.cn/" target="_blank" rel="external">https://g.inspire-energy.com.cn/</a><br><a href="https://g.starmoe.xyz/" target="_blank" rel="external">https://g.starmoe.xyz/</a><br><a href="https://letsgg.tk/" target="_blank" rel="external">https://letsgg.tk/</a><br><a href="https://www.laiguge.com/" target="_blank" rel="external">https://www.laiguge.com/</a><br><a href="http://lili.ga/" target="_blank" rel="external">http://lili.ga/</a><br><a href="http://45.78.38.197/" target="_blank" rel="external">http://45.78.38.197/</a><br><a href="https://fq.yanke.info/" target="_blank" rel="external">https://fq.yanke.info/</a><br><a href="https://g.glv.io/" target="_blank" rel="external">https://g.glv.io/</a><br><a href="https://g.libnull.com/" target="_blank" rel="external">https://g.libnull.com/</a><br><a href="http://www.jumper.site/" target="_blank" rel="external">http://www.jumper.site/</a><br><a href="https://www.guge.xxx/" target="_blank" rel="external">https://www.guge.xxx/</a><br><a href="http://198.12.101.102/" target="_blank" rel="external">http://198.12.101.102/</a><br><a href="http://www.qwspq.com/" target="_blank" rel="external">http://www.qwspq.com/</a><br><a href="https://g.namaho.com/" target="_blank" rel="external">https://g.namaho.com/</a><br><a href="http://www.51google.pw/" target="_blank" rel="external">http://www.51google.pw/</a><br><a href="http://www.nginxgoogle.com/" target="_blank" rel="external">http://www.nginxgoogle.com/</a><br><a href="https://xixico.com/" target="_blank" rel="external">https://xixico.com/</a><br><a href="http://ss2.prozhi.com/" target="_blank" rel="external">http://ss2.prozhi.com/</a><br><a href="https://g.sxisa.org/" target="_blank" rel="external">https://g.sxisa.org/</a><br><a href="https://go.coolnull.com/" target="_blank" rel="external">https://go.coolnull.com/</a><br><a href="http://bc60042.byethost13.com/" target="_blank" rel="external">http://bc60042.byethost13.com/</a><br><a href="https://g.v2fr.ml/" target="_blank" rel="external">https://g.v2fr.ml/</a><br><a href="http://s0.chenjx.cn/" target="_blank" rel="external">http://s0.chenjx.cn/</a><br><a href="http://g.chenjx.cn/" target="_blank" rel="external">http://g.chenjx.cn/</a><br><a href="https://cannotfind.me/" target="_blank" rel="external">https://cannotfind.me/</a><br><a href="https://www.xiasos.com/" target="_blank" rel="external">https://www.xiasos.com/</a><br><a href="https://www.onenew.net/" target="_blank" rel="external">https://www.onenew.net/</a><br><a href="https://g.ljqian.me/" target="_blank" rel="external">https://g.ljqian.me/</a><br><a href="https://aigg.info/" target="_blank" rel="external">https://aigg.info/</a></p>
<h2 id="http-ljy2345-esy-es"><a href="#http-ljy2345-esy-es" class="headerlink" title="http://ljy2345.esy.es/"></a><a href="http://ljy2345.esy.es/" target="_blank" rel="external">http://ljy2345.esy.es/</a></h2><p>备用镜像：</p>
<p><a href="http://glgoo.jsylhs.com/" target="_blank" rel="external">http://glgoo.jsylhs.com/</a><br><a href="https://xueshu.glgoo.org/" target="_blank" rel="external">https://xueshu.glgoo.org/</a><br><a href="https://julianhuang.cc/" target="_blank" rel="external">https://julianhuang.cc/</a><br><a href="https://www.ytso.cc/" target="_blank" rel="external">https://www.ytso.cc/</a><br><a href="https://g.jikewenku.cn/" target="_blank" rel="external">https://g.jikewenku.cn/</a><br><a href="http://guge.suanfazu.com/" target="_blank" rel="external">http://guge.suanfazu.com/</a><br><a href="http://kfd.me/" target="_blank" rel="external">http://kfd.me/</a><br><a href="http://gc.ihuan.me/" target="_blank" rel="external">http://gc.ihuan.me/</a><br><a href="http://scholar.hntvchina.com/" target="_blank" rel="external">http://scholar.hntvchina.com/</a><br><a href="https://ggso.co/" target="_blank" rel="external">https://ggso.co/</a><br><a href="https://ggso.me/" target="_blank" rel="external">https://ggso.me/</a><br><a href="https://ggso.in/" target="_blank" rel="external">https://ggso.in/</a><br><a href="http://ggso.gq/" target="_blank" rel="external">http://ggso.gq/</a></p>
<p>参考<a href="http://google.adwiki.cn" target="_blank" rel="external">adwiki</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Google-Mirror&quot;&gt;&lt;a href=&quot;#Google-Mirror&quot; class=&quot;headerlink&quot; title=&quot;Google Mirror&quot;&gt;&lt;/a&gt;Google Mirror&lt;/h1&gt;&lt;p&gt;实在是不喜欢百度&amp;amp;百不到正确的答案，以下是搜集的谷歌镜像网址。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="techology" scheme="http://cybors.github.io/tags/techology/"/>
    
      <category term="web" scheme="http://cybors.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>Some Commands you shoud known.</title>
    <link href="http://cybors.github.io/2016/09/12/abd-command/"/>
    <id>http://cybors.github.io/2016/09/12/abd-command/</id>
    <published>2016-09-12T14:44:19.000Z</published>
    <updated>2016-09-13T17:08:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>​    每个拥有android手机的人必须要会几条ADB Commands. 掌握一下命令行通过中间人的方式，你的同事的手机如果root过或者在公共场合，可以随意查看他们手机中的资料。所以对于android手机root就等于开放。<a id="more"></a></p>
<p>ADB  = Android Debug Bridge</p>
<p>ADB命令有很多，整理一下几条比较常用的如下：</p>
<p>1.查看版本</p>
<p><code>$abd version</code></p>
<p><code>Andorid Debug Bridge version 1.0.36</code></p>
<p><code>Revision 8F855A3D9B35-android</code></p>
<p>2.查看连接设备</p>
<p><code>$adb devices</code></p>
<figure class="highlight plain"><figcaption><span>of devices attached</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">02ae0c1021089daf device</div></pre></td></tr></table></figure>
<p>```</p>
<p>3.安装</p>
<p><code>adb install &lt;apkfile&gt;</code></p>
<p>保留数据和缓存文件，重新安装apk：</p>
<p><code>adb install -r &lt;apkfile&gt;</code><br>安装apk到sd卡：</p>
<p><code>adb install -s &lt;apkfile&gt;</code></p>
<p>4.卸载</p>
<p><code>adb uninstall &lt;package&gt;</code></p>
<p><code>\\eg：adb uninstall com.stormzhang.demo</code></p>
<p>卸载app但保留数据和缓存文件</p>
<p><code>adb uninstall -k &lt;package&gt;</code></p>
<p>5.启动/停止Server</p>
<p>启动Server</p>
<p><code>adb start-server</code></p>
<p>停止Server</p>
<p><code>adb kill-server</code></p>
<p>6.包管理</p>
<p>列出手机装的所有app的包名</p>
<p><code>adb shell pm list packages</code></p>
<p>列出系统应用的所有包名</p>
<p><code>adb shell pm list packages -s</code></p>
<p>列出第三方应用：</p>
<p><code>adb shell pm list packages -3</code></p>
<p>使用grep来过滤</p>
<p><code>adb shell pm list packages | grep qq</code></p>
<p>7.清除应用数据及缓存</p>
<p><code>adb shell pm clear &lt;packagename&gt;</code></p>
<p>8.启动应用</p>
<p><code>adb shell am start -n &lt;package&gt;/.ui.SplashActivity</code></p>
<p>9.强制停止应用</p>
<p><code>adb shell am force-stop &lt;packagename&gt;</code></p>
<p>10.查看日志</p>
<p><code>adb logcat</code></p>
<p>11.重启</p>
<p><code>adb reboot</code></p>
<p>12.获取序列号</p>
<p><code>$adb get-serialno</code></p>
<p>13.获取MAC地址</p>
<p><code>$adb shell cat /sys/class/net/wlan0/address</code></p>
<p>14.查看设备型号</p>
<p><code>adb shell getprop ro.product.model</code></p>
<p>15.查看Android系统版本</p>
<p><code>$adb shell getprop ro.build.version.release</code></p>
<p>16.查看屏幕分辨率</p>
<p><code>$adb shell wm size</code></p>
<p>17.检查设备是否已经ROOT</p>
<p><code>adb shell</code></p>
<p><code>su</code></p>
<p>18.开启关闭wifi（需ROOT权限）</p>
<p><code>adb root</code></p>
<p><code>adb shell svc wifi enable/disable</code></p>
<p>19.音量控制</p>
<p><code>adb shell input keyevent 24/25、164</code>  </p>
<p>24增加音量，25降低音量 164 静音</p>
<p>20.文件管理</p>
<p>复制电脑里的文件到设备</p>
<p><code>adb push &lt;电脑文件路径&gt; &lt;设备里的目录&gt;</code></p>
<p>复制设备文件到电脑</p>
<p><code>adb pull /sdcard/sr.mp4 ~/tmp</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    每个拥有android手机的人必须要会几条ADB Commands. 掌握一下命令行通过中间人的方式，你的同事的手机如果root过或者在公共场合，可以随意查看他们手机中的资料。所以对于android手机root就等于开放。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="Technology" scheme="http://cybors.github.io/tags/Technology/"/>
    
      <category term="Android" scheme="http://cybors.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>国事三两则</title>
    <link href="http://cybors.github.io/2016/09/08/affairs/"/>
    <id>http://cybors.github.io/2016/09/08/affairs/</id>
    <published>2016-09-08T10:19:31.000Z</published>
    <updated>2016-09-13T17:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>###杭州峰会，奥巴马问了马云3个问题，马云一个都没回答上来！<br>但且不说这个标题的真假，我看到这个文章内容的时候还是仔细的思考了一下的。</p>
<blockquote>
<p>G20 杭州峰会上，奥巴马和阿里巴巴集团主席马云探讨了一下。奥巴马说我们暂且不要讨论中国的经济总量什么时候能够超过美国，我先问问另外三个 “什么时候”：<a id="more"></a><br>第一，什么时候全球的精英会把孩子送到中国留学，而不是像今天都把他们的孩子送到美国、 欧洲留学？就连你们中国教育部部长都把自己子女送往美国上学！</p>
<p>第二，什么时候全球的年轻人会最欣赏中国的电影、文化、书籍，而不是像今天他们最喜欢的是美国、欧洲的电影、书籍、音乐？</p>
<p>第三，什么时候全球的消费者在选择产品的时候，会首选中国的品牌？</p>
</blockquote>
<hr>
<p>哪些整天叫嚣这米国人生活在水深火热之中，美帝亡我之心不死的专家教授们，不知道怎么看待这三个问题？<br>现在的任何一所高效的正式在编老师都要求有2年以上的国外求学经验，这个又怎么讲？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###杭州峰会，奥巴马问了马云3个问题，马云一个都没回答上来！&lt;br&gt;但且不说这个标题的真假，我看到这个文章内容的时候还是仔细的思考了一下的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;G20 杭州峰会上，奥巴马和阿里巴巴集团主席马云探讨了一下。奥巴马说我们暂且不要讨论中国的经济总量什么时候能够超过美国，我先问问另外三个 “什么时候”：
    
    </summary>
    
      <category term="life" scheme="http://cybors.github.io/categories/life/"/>
    
    
      <category term="alive" scheme="http://cybors.github.io/tags/alive/"/>
    
  </entry>
  
  <entry>
    <title>BeautifulSoup 进阶使用</title>
    <link href="http://cybors.github.io/2016/09/08/BeautifulSoup/"/>
    <id>http://cybors.github.io/2016/09/08/BeautifulSoup/</id>
    <published>2016-09-08T10:19:31.000Z</published>
    <updated>2016-09-13T17:08:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeautufulSoup-CSS-selector"><a href="#BeautufulSoup-CSS-selector" class="headerlink" title="BeautufulSoup CSS selector"></a>BeautufulSoup CSS selector</h1><p>之前混合使用bs4、re、lxml 这三个Modules进行解析html的方式虽然可以解决问题但是明显的影响了响应速度，突然发现BS4可以使用CSS Selector方式类似与Xpath的解析。<a id="more"></a></p>
<p><img src="http://ww1.sinaimg.cn/large/89de77d7jw1f7mcfj3u04j20cp0fo0uy.jpg" alt="beautifulsoup"></p>
<p>通过Chrome或者FF 得到tag的CSS Selector 路径使用select可以直接进行使用，明显的代码少了很多行，而且执行速度大大提升。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;BeautufulSoup-CSS-selector&quot;&gt;&lt;a href=&quot;#BeautufulSoup-CSS-selector&quot; class=&quot;headerlink&quot; title=&quot;BeautufulSoup CSS selector&quot;&gt;&lt;/a&gt;BeautufulSoup CSS selector&lt;/h1&gt;&lt;p&gt;之前混合使用bs4、re、lxml 这三个Modules进行解析html的方式虽然可以解决问题但是明显的影响了响应速度，突然发现BS4可以使用CSS Selector方式类似与Xpath的解析。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="Python" scheme="http://cybors.github.io/tags/Python/"/>
    
      <category term="Technology" scheme="http://cybors.github.io/tags/Technology/"/>
    
  </entry>
  
  <entry>
    <title>pyhon数据分析练手</title>
    <link href="http://cybors.github.io/2016/09/08/pytho-ex/"/>
    <id>http://cybors.github.io/2016/09/08/pytho-ex/</id>
    <published>2016-09-08T10:19:31.000Z</published>
    <updated>2016-09-13T17:08:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近小红说要买个二手房，让我帮忙看一下二手房的信息，嗯毕竟买房是个麻烦事，而近一个月济南房价真是<strong>涨疯</strong>了。</p>
<p>刚好现在学python，正好可以拿来作为练手，想要实现二手房的价格数据分析。<a id="more"></a></p>
<p>首先想了一下基本的逻辑，先从58同城爬取一下以区域划分的房源信息。</p>
<p>1.首先使用Chrome调试工具分析出页面中的信息所在tag的位置，通过BeautifulSoup或正则re或lxml这三个Modules分析出信息。</p>
<p>由于三个Modules掌握都不熟练所以这混合了这三种模块。</p>
<p><img src="http://ww3.sinaimg.cn/large/89de77d7jw1f7lceb33g6j20h00extcz.jpg" alt="python"></p>
<p>通过输入可以选择不同的行政区进行数据的选择。</p>
<p>只有数据还不够直观，通过地理位置的抓取和高德地图的逆解析得到房源信息的坐标，然后展示到地图上。嗯 就这么干…</p>
<p><img src="http://ww2.sinaimg.cn/large/89de77d7jw1f7lco2xme7j20gt0gsgog.jpg" alt="python-amp"></p>
<p>在匹配数据的过程中，发现会被高德(阿里)的服务器拒绝，所以加了延时500ms。</p>
<p><img src="http://ww3.sinaimg.cn/large/89de77d7jw1f7lcu3g5qxj211y0kgwse.jpg" alt="python-data"></p>
<p>爬取得到的房源数据</p>
<p><img src="http://ww2.sinaimg.cn/large/89de77d7jw1f7lcx3fbmlj20wx0g0wmj.jpg" alt="lat-python"></p>
<p>你解析得到的坐标数据</p>
<p>放到页面上，<a href="http://warm.pe.hu/xiaohong-house/alpha.html" target="_blank" rel="external">alpha_version</a> 可解析出房源所在位置附近的商圈。</p>
<p>觉得有点丑，然后又有了第二个版本<a href="http://warm.pe.hu/xiaohong-house/2nd.html" target="_blank" rel="external">2nd</a> 在此版本中发现，如果坐标一样或者坐标太近等原因导致大量的数据没有被展现出来。然后又有了第三个版本。热点<a href="http://warm.pe.hu/xiaohong-house/3.html" target="_blank" rel="external">Heatmap</a></p>
<p>好吧，轮子造到这里。鉴于近期济南房价的<strong>疯狂涨势</strong>,留着数据，一个月后再爬取一下，再做个涨幅数据的分析。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近小红说要买个二手房，让我帮忙看一下二手房的信息，嗯毕竟买房是个麻烦事，而近一个月济南房价真是&lt;strong&gt;涨疯&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;刚好现在学python，正好可以拿来作为练手，想要实现二手房的价格数据分析。
    
    </summary>
    
      <category term="work" scheme="http://cybors.github.io/categories/work/"/>
    
    
      <category term="Python" scheme="http://cybors.github.io/tags/Python/"/>
    
      <category term="Technology" scheme="http://cybors.github.io/tags/Technology/"/>
    
  </entry>
  
</feed>
